/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ApiConsumerInterface extends ethers.utils.Interface {
  functions: {
    "cancelRequest(bytes32,uint256,bytes4,uint256)": FunctionFragment;
    "createRequestTo(address,bytes32,uint256,string,string,int256)": FunctionFragment;
    "data()": FunctionFragment;
    "fulfill(bytes32,uint256)": FunctionFragment;
    "getChainlinkToken()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "withdrawLink()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "cancelRequest",
    values: [BytesLike, BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createRequestTo",
    values: [string, BytesLike, BigNumberish, string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "data", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "fulfill",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getChainlinkToken",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawLink",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "cancelRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createRequestTo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "data", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fulfill", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getChainlinkToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawLink",
    data: BytesLike
  ): Result;

  events: {
    "ChainlinkCancelled(bytes32)": EventFragment;
    "ChainlinkFulfilled(bytes32)": EventFragment;
    "ChainlinkRequested(bytes32)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ChainlinkCancelled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChainlinkFulfilled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChainlinkRequested"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class ApiConsumer extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ApiConsumerInterface;

  functions: {
    cancelRequest(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createRequestTo(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createRequestTo(address,bytes32,uint256,string,string,int256)"(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    data(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "data()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    fulfill(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "fulfill(bytes32,uint256)"(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getChainlinkToken(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getChainlinkToken()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    owner(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "owner()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawLink(overrides?: Overrides): Promise<ContractTransaction>;

    "withdrawLink()"(overrides?: Overrides): Promise<ContractTransaction>;
  };

  cancelRequest(
    _requestId: BytesLike,
    _payment: BigNumberish,
    _callbackFunctionId: BytesLike,
    _expiration: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelRequest(bytes32,uint256,bytes4,uint256)"(
    _requestId: BytesLike,
    _payment: BigNumberish,
    _callbackFunctionId: BytesLike,
    _expiration: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createRequestTo(
    _oracle: string,
    _jobId: BytesLike,
    _payment: BigNumberish,
    _url: string,
    _path: string,
    _times: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createRequestTo(address,bytes32,uint256,string,string,int256)"(
    _oracle: string,
    _jobId: BytesLike,
    _payment: BigNumberish,
    _url: string,
    _path: string,
    _times: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  data(overrides?: CallOverrides): Promise<BigNumber>;

  "data()"(overrides?: CallOverrides): Promise<BigNumber>;

  fulfill(
    _requestId: BytesLike,
    _data: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "fulfill(bytes32,uint256)"(
    _requestId: BytesLike,
    _data: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getChainlinkToken(overrides?: CallOverrides): Promise<string>;

  "getChainlinkToken()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawLink(overrides?: Overrides): Promise<ContractTransaction>;

  "withdrawLink()"(overrides?: Overrides): Promise<ContractTransaction>;

  callStatic: {
    cancelRequest(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createRequestTo(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createRequestTo(address,bytes32,uint256,string,string,int256)"(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    data(overrides?: CallOverrides): Promise<BigNumber>;

    "data()"(overrides?: CallOverrides): Promise<BigNumber>;

    fulfill(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "fulfill(bytes32,uint256)"(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getChainlinkToken(overrides?: CallOverrides): Promise<string>;

    "getChainlinkToken()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawLink(overrides?: CallOverrides): Promise<void>;

    "withdrawLink()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    ChainlinkCancelled(id: BytesLike | null): EventFilter;

    ChainlinkFulfilled(id: BytesLike | null): EventFilter;

    ChainlinkRequested(id: BytesLike | null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    cancelRequest(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "cancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createRequestTo(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createRequestTo(address,bytes32,uint256,string,string,int256)"(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    data(overrides?: CallOverrides): Promise<BigNumber>;

    "data()"(overrides?: CallOverrides): Promise<BigNumber>;

    fulfill(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "fulfill(bytes32,uint256)"(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getChainlinkToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getChainlinkToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawLink(overrides?: Overrides): Promise<BigNumber>;

    "withdrawLink()"(overrides?: Overrides): Promise<BigNumber>;
  };

  populateTransaction: {
    cancelRequest(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelRequest(bytes32,uint256,bytes4,uint256)"(
      _requestId: BytesLike,
      _payment: BigNumberish,
      _callbackFunctionId: BytesLike,
      _expiration: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createRequestTo(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createRequestTo(address,bytes32,uint256,string,string,int256)"(
      _oracle: string,
      _jobId: BytesLike,
      _payment: BigNumberish,
      _url: string,
      _path: string,
      _times: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    data(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "data()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fulfill(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "fulfill(bytes32,uint256)"(
      _requestId: BytesLike,
      _data: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getChainlinkToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getChainlinkToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawLink(overrides?: Overrides): Promise<PopulatedTransaction>;

    "withdrawLink()"(overrides?: Overrides): Promise<PopulatedTransaction>;
  };
}
